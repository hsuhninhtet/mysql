=>Database Multiple Trigger        //7.2.2022(Mon)

=Syntax:

DELIMITER $$

CREATE TRIGGER triggername
trigger_time trigger_event
ON tablename FOR EACH ROW
specifies existingtriggername
BEGIN
	-- statements execute
END;$$

DELIMITER ;

=>trigger_time
BEFORE
AFTER

=>trigger_event
INSERT
UPDATE
DELETE

=>specifies
PRECEDES (before activate)
FOLLOWS (after activate)

____________________________________

DELIMITER $$

CREATE TRIGGER userstatus_bfc
BEFORE INSERT
ON users FOR EACH ROW
BEGIN
	-- statements execute
END;$$

DELIMITER ;

DELIMITER $$

CREATE TRIGGER userage_bfc
BEFORE INSERT
ON users FOR EACH ROW
PRECEDES userstatus_bfc
BEGIN
	-- statements execute
END;$$

DELIMITER ;

//PRECEDES so yin userage_bfc pee mha usertatus_bfc run
//FOLLOWS so yin userstatus_bfc pee mha userage_bfc run

____________________________________

CREATE TABLE IF NOT EXISTS staffs(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(50),
	age INT,
	salary DECIMAL(10,2),
	status INT DEFAULT 1
);

DESC staffs;

INSERT INTO staffs(name,age,salary)
VALUES ('aungaung',20,500000),
('zawzaw',30,350000);

SELECT * FROM staffs;

CREATE TABLE IF NOT EXISTS salarylogs(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	oldsalary DECIMAL(10,2) NOT NULL,
	newsalary DECIMAL(10,2) NOT NULL,
	staff_id INT NOT NULL,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN KEY(staff_id) REFERENCES staffs(id) ON UPDATE CASCADE ON DELETE CASCADE
);

DESC salarylogs;
_________________________________

=>BEFORE UPDATE 

DELIMITER //

CREATE TRIGGER staffsalary_bfu
BEFORE UPDATE
ON staffs FOR EACH ROW
BEGIN
	IF OLD.salary <> NEW.salary THEN
		INSERT INTO salarylogs(oldsalary,newsalary,staff_id)
		VALUES(OLD.salary,NEW.salary,OLD.id);
	END IF;
END; //

DELIMITER ;

SELECT * FROM staffs;
SELECT * FROM salarylogs;

UPDATE staffs SET age=25 WHERE id=1;

UPDATE staffs SET status=2 WHERE id=2;

UPDATE staffs SET salary=550000 WHERE id=1;
SELECT * FROM staffs;
SELECT * FROM salarylogs;

UPDATE staffs SET salary=550000 WHERE id=2;
SELECT * FROM staffs;
SELECT * FROM salarylogs;

UPDATE staffs SET salary=350000 WHERE id=1;
SELECT * FROM staffs;
SELECT * FROM salarylogs;

INSERT INTO staffs(name,age,salary)
VALUES ('susu',20,350000);
SELECT * FROM staffs;
SELECT * FROM salarylogs;
________________________________

=>BEFORE UPDATE(FOLLOWS - AFTER)

CREATE TABLE IF NOT EXISTS salarydifflogs(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	diffamount DECIMAL(10,2) NOT NULL,
	staff_id INT NOT NULL,
	updatedby VARCHAR(50) NOT NULL,
	FOREIGN KEY(staff_id) REFERENCES staffs(id) ON UPDATE CASCADE ON DELETE CASCADE
);

DESC salarydifflogs;

DELIMITER //

CREATE TRIGGER staffsalarydiff_bfuf
BEFORE UPDATE ON staffs FOR EACH ROW
FOLLOWS staffsalary_bfu
BEGIN
	DECLARE oldsalary INT;
	DECLARE newsalary INT;
	DECLARE getdiff INT;
	SET @oldsalary := OLD.salary;
	SET @newsalary := NEW.salary;
	SET getdiff = @newsalary - @oldsalary;
	IF OLD.salary <> NEW.salary THEN
	INSERT INTO salarydifflogs(diffamount,staff_id,updatedby)
	VALUES(getdiff,OLD.id,USER());
	END IF;
END; //

DELIMITER ;

SELECT * FROM staffs;
SELECT * FROM salarylogs;
SELECT * FROM salarydifflogs;

UPDATE staffs SET age=30 WHERE id=1;
UPDATE staffs SET status=1 WHERE id=2;
SELECT * FROM staffs;
SELECT * FROM salarylogs;
SELECT * FROM salarydifflogs;

UPDATE staffs SET salary=550000 WHERE id=1; 
UPDATE staffs SET salary=550000 WHERE id=1;
SELECT * FROM staffs;
SELECT * FROM salarylogs;
SELECT * FROM salarydifflogs;

UPDATE staffs SET salary=650000 WHERE id=2;
SELECT * FROM staffs;
SELECT * FROM salarylogs;
SELECT * FROM salarydifflogs;

UPDATE staffs SET salary=200000 WHERE id=3;
SELECT * FROM staffs;
SELECT * FROM salarylogs;
SELECT * FROM salarydifflogs;

_________________________________

=>BEFORE UPDATE (PRECEDES - BEFORE)

hw 
//d lo write pay par
SET @oldsalary = OLD.salary,
	@newsalary = New.salary,
	@getdiff = @newsalary - @oldsalary;



CREATE TABLE IF NOT EXISTS salarydifflogs(
	id INT AUTO_INCREMENT PRIMARY KEY,
	diffamount DECIMAL(10,2) NOT NULL,
	staff_id INT NOT NULL,
	updated_by VARCHAR(50) NOT NULL,
	FOREIGN KEY(staff_id) REFERENCES staffs(id) ON UPDATE CASCADE ON DELETE CASCADE
);

DESC salarydifflogs;


DELIMITER //

CREATE TRIGGER staffsalary_bfup
BEFORE UPDATE ON staffs FOR EACH ROW
PRECEDES staffsalary_bfu
BEGIN
	
	SET @oldsalary = OLD.salary,
		@newsalary = NEW.salary,
		@getdiff = @newsalary - @oldsalary;

     	IF OLD.salary <> NEW.salary THEN
     		INSERT INTO salarydifflogs(diffamount,staff_id,updated_by)
     		VALUES(@getdiff,OLD.id,USER());
     	END IF;
END; //


DELIMITER ;


SELECT * FROM staffs;
SELECT * FROM  salarylogs;
SELECT * FROM  salarydifflogs;

*CAN UPDATE = other fields
UPDATE staffs SET age = 40 WHERE id = 1;
UPDATE staffs SET status = 2 WHERE id = 2;
SELECT * FROM staffs;
SELECT * FROM  salarylogs;
SELECT * FROM  salarydifflogs;


***	double results in salarydifflogs table
UPDATE staffs SET salary = 500000 WHERE id = 1;
UPDATE staffs SET salary = 600000 WHERE id = 2;
SELECT * FROM staffs;
SELECT * FROM  salarylogs;
SELECT * FROM  salarydifflogs;

***	double results in salarydifflogs table  (1 update data >>>  2 transaction )
UPDATE staffs SET salary = 650000 WHERE id = 2;
SELECT * FROM staffs;
SELECT * FROM salarylogs;
SELECT * FROM  salarydifflogs;

UPDATE staffs SET salary = 200000 WHERE id = 3;
SELECT * FROM staffs;
SELECT * FROM  salarylogs;
SELECT * FROM  salarydifflogs;

DROP TRIGGER IF EXISTS staffsalarydiff_bfup;

DROP TABLE IF EXISTS salarydifflogs;

7PF
_________________________________


NOTE:

Event 	OLD 	NEW

INSERT 	NO 		YES
UPDATE 	YES 	YES
DELETE	YES 	NO

__________________________________






staffs
id
name
age
salary
status


salarylogs
id
oldsalary
newsalary
staff_id
updated_at

____

salarydifflogs
id
diffamount
staff_id
updatedby