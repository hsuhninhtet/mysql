=>Function

(i)PROCEDURE (stored procedure)
	(a) IN = Input Parameter
	(b) OUT = Output Parameter
	(c) INOUT = Inout Parameter

(ii)FUNCTION
	(a)Default Functions (Build in)
	(b)User Define Functions
		(i)IN = Input parameters


__________________________________________

=> FUNCTION (User Define Function)

SELECT products.name,products.price,checkouts.qty,(products.price*checkouts.qty) AS totalamount
FROM checkouts
LEFT JOIN products
ON checkouts.product_id=products.id;

=Total Amount
SELECT SUM(products.price*checkouts.qty) AS totalamount
FROM checkouts
LEFT JOIN products
ON checkouts.product_id=products.id;


DELIMITER //

	CREATE FUNCTION totalamount_fun()
	RETURNS DECIMAL
	DETERMINISTIC
	BEGIN 

		DECLARE totalamount DECIAML;

		SELECT SUM(products.price*checkouts.qty) AS totalamount
		INTO totalamount
		FROM checkouts
		LEFT JOIN products
		ON checkouts.product_id=products.id;
		RETURN totalamount;

	END; //

DELIMITER ;

SELECT totalamount_fun();



=> List all Functions
SHOW FUNCTION STATUS WHERE DB='wdf6453';

=> Drop Function
DROP FUNCTION IF EXISTS totalamount_fun;
___________________________________

=> Input Parameter(Single Parameter)

=Total Amount by Product ID
SELECT SUM(products.price*checkouts.qty) AS totalamount
FROM checkouts
LEFT JOIN products
ON checkouts.product_id=products.id
WHERE products.id=1;


DELIMITER $$
	CREATE FUNCTION totalamountbyproductid_fun(p_productid INT)
	RETURNS DECIMAL DETERMINISTIC

	BEGIN
	DECLARE totalamount DECIMAL;
	SELECT SUM(products.price*checkouts.qty) AS totalamount
	INTO totalamount
	FROM checkouts
	LEFT JOIN products
	ON checkouts.product_id=products.id
	WHERE products.id=p_productid;
	RETURN totalamount;

	END; $$

DELIMITER ;

SHOW FUNCTION STATUS WHERE DB ="wdf6453";

SELECT totalamountbyproductid_fun(1);
SELECT totalamountbyproductid_fun(2);

*NULL
SELECT totalamountbyproductid_fun(3);

DROP FUNCTION IF EXISTS totalamountbyproductid_fun;

___________________________________

=> Input Parameter(Multi Parameters)

SELECT * FROM checkouts;

=Total Amount by currency
SELECT SUM(products.price*checkouts.qty) AS totalamount
FROM checkouts
LEFT JOIN products
ON checkouts.product_id=products.id;
WHERE products.id=1 AND checkours.payment="mpu";

SELECT SUM(products.price*checkouts.qty) AS totalamount
FROM checkouts
LEFT JOIN products
ON checkouts.product_id=products.id;
WHERE products.id=1 AND checkours.payment="visa";

DELIMITER //
 	CREATE FUNCTION totalamountbycurrency_fun(
 	p_productid INT,
 	p_payment VARCHAR(4)
 	)
 	RETURNS DECIMAL DETERMINISTIC

 	BEGIN 
 		DECLARE totalamount DECIMAL;
 		SELECT SUM(products.price*checkouts.qty) AS totalamount
		INTO totalamount
		FROM checkouts
		LEFT JOIN products
		ON checkouts.product_id=products.id;
		WHERE products.id=p_productid AND checkours.payment=p_payment;
 		RETURN totalamount;

 	END; //


DELIMITER ;

*error 
SELECT totalamountbycurrency_fun();
SELECT totalamountbycurrency_fun(1);

SELECT totalamountbycurrency_fun(1,'visa');
SELECT totalamountbycurrency_fun(1,'MPU');
SELECT totalamountbycurrency_fun(1,'COD');

SELECT totalamountbycurrency_fun(2,'visa');
SELECT totalamountbycurrency_fun(2,'MPU');
SELECT totalamountbycurrency_fun(2,'COD');

SELECT totalamountbycurrency_fun(3,'visa');
SELECT totalamountbycurrency_fun(3,'MPU');
SELECT totalamountbycurrency_fun(3,'COD');

SHOW FUNCTION STATUS WHERE DB="wdf6453";

DROP FUNCION IF EXISTS totalamountbycurrency_fun;


_________________________


15FUN