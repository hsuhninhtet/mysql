=>Database Trigger       //6.2.2022(Sun)

=Syntax

CREATE TRIGGER triggername
trigger_time trigger_event ON tablename FOR EACH ROW BEGIN
    -- statements
END;

=>trigger_time
BEFORE
AFTER


=>trigger_event
INSERT
UPDATE
DELETE



____________________________________

CREATE TABLE IF NOT EXISTS borrowers(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
username VARCHAR(50),
password VARCHAR(255),
age INT,
status INT DEFAULT 1
); 

DESC borrowers;


1 18-45
2 < 18
3 > 45

INSERT INTO borrowers(username,password,age)
VALUES ('aung aung',MD5(SHA1('12345')),18),
('zaw zaw',MD5(SHA1('12345')),30);

SELECT * FROM borrowers;

____________________________
=>IF Statement

IF condition1 THEN
      .....statements to execute
END IF;

IF condition1 THEN
      .....statements to execute
ELSE condition2 THEN
      .....statements to execute
END IF;


IF condition1 THEN
      .....statements to execute
ELSEIF condition2 THEN
      .....statements to execute
ELSEIF condition2 THEN
      .....statements to execute
ELSE condition2 THEN
      .....statements to execute
END IF;


_________________________________
=>BEFORE INSERT

Note: DELIMITER // DELIMIER $$ DELIMITER |

DELIMITER // 

CREATE TRIGGER borrowerstatus_bfc
BEFORE INSERT 
ON borrowers FOR EACH ROW
BEGIN 
     IF NEW.age < 18 THEN SET NEW.status = 2;
     END IF;
END; // 

DELIMITER ;


DELIMITER |

CREATE TRIGGER borrowerstatus_bfc
BEFORE INSERT 
ON borrowers FOR EACH ROW
BEGIN 
     IF NEW.age < 18 THEN SET NEW.status = 2;
     END IF;
END; | 

DELIMITER ;


DELIMITER $$

CREATE TRIGGER borrowerstatus_bfc
BEFORE INSERT 
ON borrowers FOR EACH ROW
BEGIN 
     IF NEW.age < 18 THEN SET NEW.status = 2;
     END IF;
END; $$ 

DELIMITER ;


"for semicomma" => DELIMITER //  // DELIMITER ; (par ko par ya ml ma hote yin result ma htwet phuu)

SHOW TRIGGERS;
SHOW TRIGGERS LIKE 'borrower%';
SHOW TRIGGERS LIKE 'borrower%'\G;


INSERT INTO borrowers(username,password,age)
VALUES ('hninhnin',MD5(SHA1(12345)),16);

SELECT * FROM borrowers;

INSERT INTO borrowers(username,password,age)
VALUES ('thida',MD5(SHA1(12345)),35);

SELECT * FROM borrowers;

DROP TRIGGER IF EXISTS borrowerstatus_bfc;

INSERT INTO borrowers(username,password,age)
VALUES ('june',MD5(SHA1(12345)),14);

SELECT * FROM borrowers;
________________________________

DELIMITER |

CREATE TRIGGER borrowerstatus_bfc
BEFORE INSERT
ON borrowers FOR EACH ROW
BEGIN
     IF NEW.age < 18 THEN SET NEW.status =2;
     ELSEIF NEW.age > 45 THEN SET NEW.status = 3;
     END IF;
END;|

DELIMITER ;

INSERT INTO borrowers(username,password,age)
VALUES ('yamin',MD5(SHA1(12345)),50);
SELECT * FROM borrowers;

INSERT INTO borrowers(username,password,age)
VALUES ('tuntun',MD5(SHA1(12345)),28);
SELECT * FROM borrowers;


INSERT INTO borrowers(username,password,age)
VALUES ('april',MD5(SHA1(12345)),12);
SELECT * FROM borrowers;

DROP TRIGGER IF EXISTS borrowerstatus_bfc;

________________________
=>MYSQL ERRORS


A numeric error code(1146)
SQLSTATE value('42S02') . string / 5 characters
Message String - description of the error

________________________

DELIMITER $$

CREATE TRIGGER borrowerrestrict_bfc
BEFORE INSERT
ON borrowers FOR EACH ROW
BEGIN
     IF NEW.age < 18 THEN  
          SIGNAL SQLSTATE '45000'
          SET MESSAGE_TEXT = "Ohh...we cannot provide loan for this  user";
     END IF;
END; $$

DELIMITER ;


INSERT INTO borrowers(username,password,age)
VALUES ('susu',MD5(SHA1(12345)),35);
SELECT * FROM borrowers;

*error with message 45000(cuz her age is less than 18)
INSERT INTO borrowers(username,password,age)
VALUES ('yuyu',MD5(SHA1(12345)),16);
SELECT * FROM borrowers;


INSERT INTO borrowers(username,password,age)
VALUES ('kyaw kyaw',MD5(SHA1(12345)),55);
SELECT * FROM borrowers;

DROP TRIGGER IF EXISTS borrowerrestrict_bfc;
____________________________________________________

=>AFTER INSERT 

CREATE TABLE IF NOT EXISTS borrowercreators(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
borrower_id INT,
created_at TIMESTAMP DEFAULT NOW(),
created_by VARCHAR(50)
);

DESC borrowercreators;

DELIMITER //

CREATE TRIGGER borrowercreator_afc
AFTER INSERT 
ON borrowers FOR EACH ROW
BEGIN
      DECLARE dbuser VARCHAR(50);
      SELECT USER() INTO dbuser;
      INSERT INTO borrowercreators(borrower_id,created_by)
      VALUES(NEW.id,dbuser);
END;//

DELIMITER ;


INSERT INTO borrowers(username,password,age)
VALUES ('hlahla',MD5(SHA1(12345)),23);

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;

INSERT INTO borrowers(username,password,age)
VALUES ('myamya',MD5(SHA1(12345)),50);

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;

_____________________

CREATE TABLE IF NOT EXISTS remiders(
   id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
   borrower_id INT,
   message VARCHAR(255) NOT NULL
);

DESC remiders;

DELIMITER //

CREATE TRIGGER borrowerageremiders_afc
AFTER INSERT
ON borrowers FOR EACH ROW
BEGIN
      IF NEW.age IS NULL THEN
         INSERT INTO remiders(borrower_id,message)
         VALUES(NEW.id,CONCAT('Dear ',NEW.username,' , please update your age.'));
      END IF;
END; //

DELIMITER ;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM remiders;

INSERT INTO borrowers(username,password)
VALUES('thura',MD5(SHA1(12345)));

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM remiders;

INSERT INTO borrowers(username,password)
VALUES('myomyo',MD5(SHA1(12345)));

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM remiders;

INSERT INTO borrowers(username,password,age)
VALUES('maungmaung',MD5(SHA1(12345)),14);

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM remiders;

__________________________________________

=>BEFORE UPDATE

DELIMITER |

CREATE TRIGGER borrowerage_bfu
BEFORE UPDATE
ON borrowers FOR EACH ROW
BEGIN
      
      DECLARE errmessage VARCHAR(255);
      SET errmessage = CONCAT('The old age is ',OLD.age,'. Sorry, we cannot provide to change.');

      IF OLD.age IS NOT NULL THEN
            SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = errmessage;
      ELSE
            IF NEW.age < 18 THEN SET NEW.status = 2;
            ELSEIF NEW.age > 45 THEN SET NEW.status = 3;
            END IF;
      END IF;

END; |


DELIMITER ;


SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM remiders;

*error with message 45000
 UPDATE borrowers SET age = 40 WHERE id = 1;

UPDATE borrowers SET age = 30 WHERE id = 15;
UPDATE borrowers SET age = 15 WHERE id = 17;
UPDATE borrowers SET age = 50 WHERE id = 14;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM remiders;

INSERT INTO borrowers(username,password)
VALUES('thiri',MD5(SHA1(12345))),
      ('kyal sin',MD5(SHA1(12345))),
      ('ko tha',MD5(SHA1(12345)));

______________________________________

=>AFTER UPDATE

DELIMITER $$

CREATE TRIGGER borrowerremider_afu
AFTER UPDATE
ON borrowers FOR EACH ROW
BEGIN
      DELETE FROM remiders WHERE borrower_id = NEW.id;
END; $$

DELIMITER ;

*error with message 45000
 UPDATE borrowers SET age = 40 WHERE id = 1;

UPDATE borrowers SET age = 30 WHERE id = 18;
UPDATE borrowers SET age = 15 WHERE id = 19;
UPDATE borrowers SET age = 50 WHERE id = 20;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM remiders;


___________________________________________

=>BEFORE DELETE      // 7.2.2022(Mon)

CREATE TABLE IF NOT EXISTS activities(
      id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
      borrower_id INT,
      created_at TIMESTAMP DEFAULT NOW(),
      created_by VARCHAR(50)
);

DESC activities;


DELIMITER $$

CREATE TRIGGER borroweracti_bfd
BEFORE DELETE
ON borrowers FOR EACH ROW
BEGIN
      DECLARE dbuser VARCHAR(50);
      SELECT USER() INTO dbuser;

      INSERT INTO activities(borrower_id,created_by)
      VALUES(OLD.id,dbuser);

END; //

DELIMITER ;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;

DELETE FROM borrowers WHERE id = 20;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;

DELETE FROM borrowers WHERE id = 18;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;

DELETE FROM borrowers WHERE id = 1;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;

____________________________________________________

=>AFTER DELETE

DELIMITER //

CREATE TRIGGER borroweracti_afd
AFTER DELETE
ON borrowers FOR EACH ROW
BEGIN
      DELETE FROM borrowercreators WHERE borrower_id = OLD.id;

END; //

DELIMITER ;


SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;

DELETE FROM borrowers WHERE id = 19;
DELETE FROM borrowers WHERE id = 15;
DELETE FROM borrowers WHERE id = 16;
DELETE FROM borrowers WHERE id = 19;


SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;

________________________________________________














id
borrower_id
created_at
created_by















SELECT users.name,users.age ,sales.orderdate FROM users
JOIN sales



users Table
name 
email 
password
age
status   df   1

aungaung      aungaung@gmail.com      12345      20   1
zawzaw        zawzaw@gmail.com        12345     18   1
maungmaung    maungmaung@gmail.com    12345      14   1
susu          susu@gmail.com          12345      35   1





Product Table
1 JAN 2021

1 Redbull 500
2 Sponsor 400
________

1 JAN 2022

1 RED_BULL 1000

_____________________________

Sales table

id 		invdate			product_id		qty		price	casheir_id	member_id
1 		10 Jan 2021		1     		    1   	500		1001		NULL
1 		20 June 2021	1     		    1   	500		1001		NULL
1 		31 Dec 2021		1     		    1   	500		1001		NULL
1 		10 Oct 2021		1     		    1   	1000	1001		NULL
1 		10 Nov 2021		1     		    1   	1000	1001		NULL

_____________________________

Pdpricehistories table
id
product_id
oldprice
newprice
updated_by