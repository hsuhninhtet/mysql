=>View                  //13.2.2022(Sat)

=Syntax


*CREATE 
CREATE VIEW vw_tablename(viewname) AS 
-- statments 

*READ
SELECT columns FROM viewname;


*UPDATE
CREATE OR REPLACE VIEW vw_tablename AS 
-- statments

*DELETE


=> List all tables (BASE TABLE)
SHOW TABLES;
SHOW FULL TABLES; (show table type)
SHOW FULL TABLES WHERE TABLE_TYPE LIKE 'BASE TABLE';
SHOW FULL TABLES IN kotha007/*user*/ WHERE TABLE_TYPE LIKE 'BASE TABLE';

=> List all views (VIEW)
SHOW FULL TABLES WHERE TABLE_TYPE LIKE 'VIEW';
SHOW FULL TABLES IN kotha007/*user*/ WHERE TABLE_TYPE LIKE 'VIEW';

_________________________________________________

CREATE TABLE IF NOT EXISTS shoppers (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    phone VARCHAR(15) NOT NULL UNIQUE
);

DESC shoppers;
SHOW INDEX FROM shoppers; 

INSERT INTO shoppers (name,phone)
VALUES ('su su','0911111'),
('tun tun','0922222');

SELECT * FROM shoppers;

CREATE TABLE IF NOT EXISTS products (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE,
    price DECIMAL(10,2) NOT NULL
);

DESC products;
SHOW INDEX FROM products;

INSERT INTO products(name,price)
VALUES ('redbull',600),
('Sponsor',500);

SELECT * FROM products;

CREATE TABLE IF NOT EXISTS checkouts(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    date TIMESTAMP DEFAULT NOW(),
    product_id INT NOT NULL,
    qty INT NOT NULL,
    total DECIMAL(10,2) NOT NULL,
    payment ENUM('VISA','MPU','COD') NOT NULL,
    shopper_id INT NOT NULL,
    FOREIGN KEY (shopper_id) REFERENCES shoppers(id),
    FOREIGN KEY (product_id) REFERENCES products(id) 
);

DESC checkouts;
SHOW INDEX FROM checkouts;

INSERT INTO checkouts(product_id,qty,total,payment,shopper_id)
VALUES(1,2,1200,3,2),
(1,5,3000,1,1),
(2,1,400,2,1),
(1,2,1200,3,2),
(2,3,1200,3,2),
(1,4,2400,1,1);

SELECT * FROM products;
SELECT * FROM products;
SELECT * FROM checkouts;

=>Payment Saving
SELECT payment,SUM(total) AS totalamount
FROM checkouts
GROUP BY payment
ORDER BY payment DEC;

=>Create 
CREATE VIEW vw_paymentsaying AS 
SELECT payment,SUM(total) AS totalamount
FROM checkouts
GROUP BY payment
ORDER BY totalamount DESC;

=>Update 
CREATE OR REPLACE VIEW vw_paymentsaying AS 
SELECT payment,SUM(total) AS totalamount
FROM checkouts
GROUP BY payment
ORDER BY totalamount ASC;


SELECT * FROM vw_paymentsaying;

DROP VIEW IF EXISTS vw_paymentsaving;

______________
SELECT name,qty,total
FROM checkouts
INNER JOIN products
ON checkouts.product_id = products.id;

=>Big Sales
SELECT products.name,SUM(checkouts.qty) AS totalqty,SUM(checkouts.total) AS totalamount
FROM checkouts
INNER JOIN products
ON checkouts.product_id = products.id
GROUP BY checkouts.product_id;

SHOW FULL TABLES;
SELECT * FROM vw_bigsales;

__________________________________

=>Big Shoppers

SELECT shoppers.name,SUM(checkouts.qty) AS totalqty,SUM(checkouts.total) AS totalamount
FROM checkouts
INNER JOIN shoppers
ON checkouts.shopper_id = shoppers.id
GROUP BY checkouts.shopper_id
ORDER BY totalamount DESC;


CREATE VIEW vw_bigshoppers AS
SELECT shoppers.name,SUM(checkouts.qty) AS totalqty,SUM(checkouts.total) AS totalamount
FROM checkouts
INNER JOIN shoppers
ON checkouts.shopper_id = shoppers.id
GROUP BY checkouts.shopper_id
ORDER BY totalamount DESC;


SELECT * FROM vw_bigshoppers;
SHOW FULL TABLES WHERE TABLE_TYPE LIKE 'VIEW';

DESC vw_bigshoppers;


*error
INSERT INTO vw_bigshoppers(name,totalqty,totalamount)
VALUES ("kyaw kyaw",15,5000);

__________________________________________

SELECT shoppers.name,SUM(checkouts.qty) AS totalqty,SUM(checkouts.total) AS totalamount,checkouts.payment
FROM checkouts
INNER JOIN shoppers
ON checkouts.shopper_id = shoppers.id
WHERE payment NOT IN("VISA","MPU")
GROUP BY shoppers.id;


GROUP BY checkouts.shopper_id
ORDER BY totalamount DESC;


